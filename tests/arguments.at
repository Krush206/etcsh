AT_BANNER([Command-line argument handling])

dnl
dnl	-b
dnl

AT_SETUP([-b])
AT_KEYWORDS([arguments])

AT_DATA([-script.csh],
[[echo $1
]])
AT_CHECK([tcsh -f -b -script.csh --version], , [--version
])

AT_CLEANUP()


dnl
dnl	-c
dnl

AT_SETUP([-c])
AT_KEYWORDS([arguments])

AT_CHECK([tcsh -f -c 'echo $1' foo], , [foo
])

AT_CHECK([tcsh -f -c 'exit 99'], 99)

AT_CHECK([tcsh -f -c 'echo \\\'], 1, ,
[Argument for -c ends in backslash.
])

AT_CHECK([tcsh -f -c 'echo \\'], ,
[\
])

AT_CHECK([tcsh -f -c])

AT_CLEANUP()


dnl
dnl	-d
dnl

TCSH_UNTESTED([-d])


dnl
dnl	-e
dnl

AT_SETUP([-e])
AT_KEYWORDS([arguments])

dnl Note that exit is a builtin, won't work here without using a subshell
AT_CHECK([tcsh -f -e -c 'echo 1; (exit 3); echo 2'], 3, [1
])

AT_CLEANUP()


dnl
dnl	-f
dnl

TCSH_UNTESTED([-f])


dnl
dnl	-i
dnl

AT_SETUP([-i])
AT_KEYWORDS([arguments])

AT_CHECK([echo 'echo $1' | tcsh -f -q -i foo], ,
[[> foo
> exit
]])

AT_CLEANUP()


dnl
dnl	-l
dnl

dnl Warning message contains strerror(EBADF), libc-dependent; can't be turned
dnl off using -q because -l works only when alone
TCSH_UNTESTED([-l])


dnl
dnl	-m
dnl

TCSH_UNTESTED([-m])


dnl
dnl	-n
dnl

dnl -n is tested in noexec.at


dnl
dnl	-q
dnl

dnl Don't test -q for now because the output is unpredictable

TCSH_UNTESTED([-q])

m4_if([
AT_SETUP([-q])

 Nested to make the SIGQUIT reporting predictable
AT_CHECK([tcsh -f -q -c 'kill -QUIT $$'], 131, ,)

AT_CLEANUP()
])


dnl
dnl	-s
dnl

AT_SETUP([-s])
AT_KEYWORDS([arguments])

AT_CHECK([echo 'echo $1' | tcsh -f -s foo], , [foo
])

AT_CLEANUP()


dnl
dnl	-t
dnl

AT_SETUP([-t])
AT_KEYWORDS([arguments])

AT_DATA([input.csh],
[[echo 1\
2
]])
AT_CHECK([tcsh -f -t < input.csh], , [1 2
])

AT_CLEANUP()


dnl
dnl	-v
dnl

AT_SETUP([-v])
AT_KEYWORDS([arguments])

AT_CHECK([echo 'repeat 2 echo OK' | tcsh -f -v], ,
[OK
OK
],
[repeat 2 echo OK
])

AT_CLEANUP()


dnl
dnl	-x
dnl

AT_SETUP([-x])
AT_KEYWORDS([arguments])

AT_CHECK([echo 'repeat 2 echo OK' | tcsh -f -x], ,
[OK
OK
],
[repeat 2 echo OK
echo OK
echo OK
])

AT_CLEANUP()


dnl
dnl	-V
dnl

TCSH_UNTESTED([-V])

dnl
dnl	-X
dnl

TCSH_UNTESTED([-X])

dnl
dnl	--help
dnl

TCSH_UNTESTED([--help])

dnl
dnl	--version
dnl

TCSH_UNTESTED([--version])


dnl
dnl	Invalid option (-Z)
dnl

AT_SETUP([Invalid option (-Z)])
AT_KEYWORDS([arguments])

AT_CHECK([tcsh -f -Z], 1, ,
[[Unknown option: `-Z'
Usage: tcsh [ -bcdefilmnqstvVxX ] [ argument ... ].
]])

AT_CLEANUP()


dnl
dnl	Non-option arguments
dnl

AT_SETUP([Non-option arguments])
AT_KEYWORDS([arguments])

AT_DATA([options.csh],
[[echo $0
echo $1
echo $#argv
echo $argv
]])
AT_CHECK([tcsh -f ./././options.csh one two three], ,
[./././options.csh
one
3
one two three
])

AT_DATA([unreadable.csh],
[[echo fail
]])
chmod 0 unreadable.csh
AT_CHECK([tcsh -f unreadable.csh], 1, [], [ignore])

AT_CLEANUP()
